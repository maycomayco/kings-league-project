---
import { getLeaderboard } from '@services/leaderboard'

const leaderboard = await getLeaderboard()

const { format } = Astro.props
const isSmall = format === 'small'
---

<div class='relative overflow-x-auto shadow-md sm:rounded-lg'>
	<table class='text-xs w-full text-center text-black'>
		<thead class='font-black text-white uppercase bg-black'>
			<tr>
				<th scope='col' colspan='5' class='px-6 py-3'>Pos.</th>
			</tr>
		</thead>
		<tbody>
			{
				leaderboard.map((info) => {
					const { team, wins, losses, rank, scoredGoals, concededGoals, yellowCards, redCards } =
						info
					const { name, image, id } = team
					return (
						<tr class='odd:bg-white even:bg-slate-100 border-b text-base hover:bg-slate-50'>
							<th scope='row' class='text-center px-6 py-4 font-black whitespace-nowrap'>
								{rank}
							</th>
							<td class='px-6 py-4 font-black text-left'>
								<a href={`/team/${id}`} class='flex gap-x-4 items-center'>
									<img src={image} alt={`Logo de ${name}`} class='w-6 h-6' />
									{name}
								</a>
							</td>
							<td class='px-6 py-4'>{wins}</td>
							<td class='px-6 py-4'>{losses}</td>
							{!isSmall && (
								<>
									<td class='px-6 py-4'>{scoredGoals}</td>
									<td class='px-6 py-4'>{concededGoals}</td>
									<td class='px-6 py-4'>{yellowCards}</td>
									<td class='px-6 py-4'>{redCards}</td>
								</>
							)}
						</tr>
					)
				})
			}
		</tbody>
	</table>
</div>
